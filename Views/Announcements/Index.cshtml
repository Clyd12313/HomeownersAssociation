@model IEnumerable<HomeownersAssociation.Models.Announcement>

@{
    ViewData["Title"] = "Announcements";
}

<div class="container">
    <h1 class="mb-4">@ViewData["Title"]</h1>

    @if (TempData["SuccessMessage"] != null)
    {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
    }

    @if (User.IsInRole("Admin"))
    {
            <div class="mb-4">
                <a asp-action="Create" class="btn btn-primary">
                    <i class="bi bi-plus-circle"></i> Create New Announcement
                </a>
            </div>
    }

    @if (!Model.Any())
    {
            <div class="alert alert-info">
                <i class="bi bi-info-circle"></i> There are no announcements at this time.
            </div>
    }
    else
    {
            <div class="row">
                @foreach (var item in Model)
                {
                        <div class="col-md-6 mb-4">
                            <div class="card h-100 @GetPriorityClass(item.Priority)">
                                <div class="card-header d-flex justify-content-between align-items-center">
                                    <h5 class="mb-0">@item.Title</h5>
                                    <span class="badge @GetPriorityBadgeClass(item.Priority)">@item.Priority</span>
                                </div>
                                <div class="card-body">
                                    <p class="card-text">@Html.Raw(item.Content.Length > 200 ? item.Content.Substring(0, 200) + "..." : item.Content)</p>
                            
                                    @if (!string.IsNullOrEmpty(item.AttachmentUrl))
                                    {
                                            <p><i class="bi bi-paperclip"></i> Attachment available</p>
                                    }
                            
                                    <div class="d-flex justify-content-between align-items-center mt-3">
                                        <small class="text-muted">
                                            Posted by @(item.Author?.FirstName ?? "Unknown") on @item.DatePosted.ToString("MMM dd, yyyy")
                                        </small>
                                
                                        @if (item.ExpiryDate.HasValue)
                                        {
                                                <small class="text-muted">Expires on @item.ExpiryDate.Value.ToString("MMM dd, yyyy")</small>
                                        }
                                    </div>
                                </div>
                                <div class="card-footer bg-transparent">
                                    <div class="d-flex justify-content-between">
                                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-primary">
                                            <i class="bi bi-eye"></i> View Details
                                        </a>
                                
                                        @if (User.IsInRole("Admin"))
                                        {
                                                <div>
                                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary">
                                                        <i class="bi bi-pencil"></i> Edit
                                                    </a>
                                                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger">
                                                        <i class="bi bi-trash"></i> Delete
                                                    </a>
                                                </div>
                                        }
                                    </div>
                                </div>
                            </div>
                        </div>
                }
            </div>
    }
</div>

@functions {
    string GetPriorityClass(AnnouncementPriority priority)
    {
        return priority switch
        {
            AnnouncementPriority.Urgent => "border-danger",
            AnnouncementPriority.High => "border-warning",
            AnnouncementPriority.Normal => "border-primary",
            AnnouncementPriority.Low => "border-secondary",
            _ => "border-primary"
        };
    }

    string GetPriorityBadgeClass(AnnouncementPriority priority)
    {
        return priority switch
        {
            AnnouncementPriority.Urgent => "bg-danger",
            AnnouncementPriority.High => "bg-warning text-dark",
            AnnouncementPriority.Normal => "bg-primary",
            AnnouncementPriority.Low => "bg-secondary",
            _ => "bg-primary"
        };
    }
}