@model IEnumerable<HomeownersAssociation.Models.Announcement>
@using HomeownersAssociation.Models

@{
    ViewData["Title"] = "Announcements";
}

<div class="container-fluid p-0">
    <!-- Hero Section -->
    <div class="hero-section bg-dark text-white text-center d-flex align-items-center justify-content-center" style="height: 15vh;">
        <div>
            <h1 class="display-4 fw-bold oswald-heading">@ViewData["Title"]</h1>
            <p class="lead lora-body">Stay informed with the latest community updates and notices</p>
        </div>
    </div>
</div>

<div class="container py-5 lora-body">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show" role="alert">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
        </div>
    }

    @if (User.IsInRole("Admin"))
    {
        <div class="mb-4 text-center">
            <a asp-action="Create" class="btn btn-dark">
                <i class="bi bi-plus-circle"></i> Create New Announcement
            </a>
        </div>
        
        <div class="mb-4">
            <div class="d-flex justify-content-center gap-3">
                <div class="badge bg-info d-flex align-items-center p-2 mb-0">
                    <i class="bi bi-globe me-1"></i> Public Announcement
                </div>
                <div class="badge bg-secondary d-flex align-items-center p-2 mb-0">
                    <i class="bi bi-lock me-1"></i> Private Announcement
                </div>
            </div>
        </div>
    }

    @if (!Model.Any())
    {
        <div class="alert alert-info">
            <i class="bi bi-info-circle"></i> There are no announcements at this time.
        </div>
    }
    else
    {
        <div class="row justify-content-center mb-5">
            @foreach (var item in Model)
            {
                <div class="col-md-8 mb-4">
                    <div class="card h-100 shadow-sm @GetPriorityClass(item.Priority)" style="border-width: 2px; transition: transform 0.3s;">
                        <div class="card-header d-flex justify-content-between align-items-center oswald-heading bg-dark text-white">
                            <div class="d-flex align-items-center">
                                <h5 class="mb-0">@item.Title</h5>
                                @if (item.IsPublic)
                                {
                                    <span class="badge bg-info ms-2" title="Public Announcement">
                                        <i class="bi bi-globe"></i>
                                    </span>
                                }
                                else
                                {
                                    <span class="badge bg-secondary ms-2" title="Private Announcement (Residents Only)">
                                        <i class="bi bi-lock"></i>
                                    </span>
                                }
                            </div>
                            <span class="badge @GetPriorityBadgeClass(item.Priority)">@item.Priority</span>
                        </div>
                        <div class="card-body">
                            <p class="card-text">@Html.Raw(item.Content.Length > 200 ? item.Content.Substring(0, 200) + "..." : item.Content)</p>
                            
                            @if (!string.IsNullOrEmpty(item.AttachmentUrl))
                            {
                                <p><i class="bi bi-paperclip"></i> Attachment available</p>
                            }
                            
                            <div class="d-flex justify-content-between align-items-center mt-3" style="font-size: 0.9rem;">
                                <small class="text-muted">
                                    Posted by @(item.Author?.FirstName ?? "Unknown") on @item.DatePosted.ToString("MMM dd, yyyy")
                                </small>
                                
                                @if (item.ExpiryDate.HasValue)
                                {
                                    <small class="text-muted">Expires on @item.ExpiryDate.Value.ToString("MMM dd, yyyy")</small>
                                }
                            </div>
                        </div>
                        <div class="card-footer bg-transparent">
                            <div class="d-flex justify-content-between">
                                <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-dark">
                                    <i class="bi bi-eye"></i> View Details
                                </a>
                                
                                @if (User.IsInRole("Admin"))
                                {
                                    <div>
                                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-secondary">
                                            <i class="bi bi-pencil"></i> Edit
                                        </a>
                                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-outline-danger">
                                            <i class="bi bi-trash"></i> Delete
                                        </a>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@functions {
    string GetPriorityClass(HomeownersAssociation.Models.AnnouncementPriority priority)
    {
        return priority switch
        {
            HomeownersAssociation.Models.AnnouncementPriority.Urgent => "border-dark",
            HomeownersAssociation.Models.AnnouncementPriority.High => "border-dark",
            HomeownersAssociation.Models.AnnouncementPriority.Normal => "border-dark",
            HomeownersAssociation.Models.AnnouncementPriority.Low => "border-dark",
            _ => "border-dark"
        };
    }

    string GetPriorityBadgeClass(HomeownersAssociation.Models.AnnouncementPriority priority)
    {
        return priority switch
        {
            HomeownersAssociation.Models.AnnouncementPriority.Urgent => "bg-danger",
            HomeownersAssociation.Models.AnnouncementPriority.High => "bg-warning text-dark",
            HomeownersAssociation.Models.AnnouncementPriority.Normal => "bg-primary",
            HomeownersAssociation.Models.AnnouncementPriority.Low => "bg-secondary",
            _ => "bg-primary"
        };
    }
}