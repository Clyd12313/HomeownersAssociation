@using Microsoft.AspNetCore.Identity
@inject SignInManager<HomeownersAssociation.Models.ApplicationUser> SignInManager
@inject UserManager<HomeownersAssociation.Models.ApplicationUser> UserManager

<ul class="navbar-nav">
    @if (SignInManager.IsSignedIn(User))
    {
        var user = await UserManager.GetUserAsync(User);
        var displayName = user?.FirstName ?? User.Identity?.Name ?? "User";
        var isAdmin = user != null && await UserManager.IsInRoleAsync(user, "Admin");

        @if (isAdmin)
        {
            <li class="nav-item">
                <a class="nav-link text-dark" asp-area="" asp-controller="Admin" asp-action="Index">Admin Dashboard</a>
            </li>
        }

        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Home" asp-action="Index" title="Manage">Hello
                @displayName!</a>
        </li>
        <li class="nav-item">
            <form class="form-inline" asp-area="" asp-controller="Account" asp-action="Logout"
                asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })">
                <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
            </form>
        </li>
    }
    else
    {
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Register">Register</a>
        </li>
        <li class="nav-item">
            <a class="nav-link text-dark" asp-area="" asp-controller="Account" asp-action="Login">Login</a>
        </li>
    }
</ul>
