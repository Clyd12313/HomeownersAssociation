@model IEnumerable<HomeownersAssociation.Models.Payment>
@{
    ViewData["Title"] = "Payment Records";
}

<div class="container mt-4">
    <div class="row mb-4">
        <div class="col-md-6">
            <h1 class="display-4 text-primary">Payment Records</h1>
        </div>
        <div class="col-md-6 text-end">
            <a asp-action="Index" class="btn btn-outline-secondary">
                <i class="bi bi-arrow-left"></i> Back to Bills
            </a>
        </div>
    </div>

    @if (TempData["SuccessMessage"] != null)
    {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
            <div class="alert alert-danger alert-dismissible fade show" role="alert">
                @TempData["ErrorMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
    }

    <!-- Filter Controls -->
    <div class="card mb-4">
        <div class="card-body">
            <div class="row">
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="methodFilter">Payment Method</label>
                        <select id="methodFilter" class="form-select">
                            <option value="">All Methods</option>
                            <option value="Cash">Cash</option>
                            <option value="Check">Check</option>
                            <option value="BankTransfer">Bank Transfer</option>
                            <option value="CreditCard">Credit Card</option>
                            <option value="OnlinePayment">Online Payment</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="form-group">
                        <label for="dateRangeFilter">Date Range</label>
                        <select id="dateRangeFilter" class="form-select">
                            <option value="">All Time</option>
                            <option value="today">Today</option>
                            <option value="thisWeek">This Week</option>
                            <option value="thisMonth">This Month</option>
                            <option value="lastMonth">Last Month</option>
                            <option value="thisYear">This Year</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="searchFilter">Search</label>
                        <input type="text" id="searchFilter" class="form-control" placeholder="Payment #, Bill #, Homeowner name...">
                    </div>
                </div>
            </div>
        </div>
    </div>

    @if (!Model.Any())
    {
            <div class="alert alert-info">
                <i class="bi bi-info-circle"></i> No payment records found.
            </div>
    }
    else
    {
            <div class="card">
                <div class="card-header bg-primary text-white">
                    <div class="row align-items-center">
                        <div class="col">
                            <h5 class="mb-0">Payment History</h5>
                        </div>
                        <div class="col text-end">
                            <span class="badge bg-light text-dark" id="recordCount">@Model.Count() records</span>
                        </div>
                    </div>
                </div>
                <div class="card-body p-0">
                    <div class="table-responsive">
                        <table class="table table-striped table-hover mb-0" id="paymentsTable">
                            <thead class="table-light">
                                <tr>
                                    <th>Payment #</th>
                                    <th>Date</th>
                                    <th>Homeowner</th>
                                    <th>Bill #</th>
                                    <th>Amount</th>
                                    <th>Method</th>
                                    <th>Reference</th>
                                    <th>Processed By</th>
                                    <th>Actions</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var payment in Model)
                                {
                                        <tr class="payment-row"
                                            data-method="@payment.PaymentMethod"
                                            data-date="@payment.PaymentDate.ToString("yyyy-MM-dd")"
                                            data-search="@payment.PaymentNumber.ToLower() @payment.Bill?.BillNumber.ToLower() @(payment.Homeowner?.FirstName.ToLower()) @(payment.Homeowner?.LastName.ToLower()) @payment.ReferenceNumber?.ToLower()">
                                            <td>@payment.PaymentNumber</td>
                                            <td>@payment.PaymentDate.ToString("MM/dd/yyyy")</td>
                                            <td>@(payment.Homeowner != null ? $"{payment.Homeowner.FirstName} {payment.Homeowner.LastName}" : "Unknown")</td>
                                            <td>
                                                @if (payment.Bill != null)
                                                {
                                                        <a asp-action="Details" asp-route-id="@payment.BillId">@payment.Bill.BillNumber</a>
                                                }
                                                else
                                                {
                                                        <span class="text-muted">N/A</span>
                                                }
                                            </td>
                                            <td class="text-success fw-bold">â‚±@payment.AmountPaid.ToString("N2")</td>
                                            <td>@payment.PaymentMethod</td>
                                            <td>
                                                @if (!string.IsNullOrEmpty(payment.ReferenceNumber))
                                                {
                                                        @payment.ReferenceNumber
                                                }
                                                else
                                                {
                                                        <span class="text-muted">-</span>
                                                }
                                            </td>
                                            <td>
                                                @if (payment.ProcessedBy != null)
                                                {
                                                        <span class="text-primary">@payment.ProcessedBy.FirstName @payment.ProcessedBy.LastName</span>
                                                }
                                                else
                                                {
                                                        <span class="text-muted">Self-payment</span>
                                                }
                                            </td>
                                            <td>
                                                <a href="#" class="btn btn-sm btn-info" data-bs-toggle="modal" data-bs-target="#paymentModal-@payment.Id">
                                                    <i class="bi bi-eye"></i>
                                                </a>
                                            </td>
                                        </tr>
                                
                                        <!-- Payment Details Modal -->
                                        <div class="modal fade" id="paymentModal-@payment.Id" tabindex="-1" aria-labelledby="paymentModalLabel-@payment.Id" aria-hidden="true">
                                            <div class="modal-dialog">
                                                <div class="modal-content">
                                                    <div class="modal-header bg-info text-white">
                                                        <h5 class="modal-title" id="paymentModalLabel-@payment.Id">Payment Details</h5>
                                                        <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
                                                    </div>
                                                    <div class="modal-body">
                                                        <div class="row mb-3">
                                                            <div class="col-md-6 fw-bold">Payment Number:</div>
                                                            <div class="col-md-6">@payment.PaymentNumber</div>
                                                        </div>
                                                        <div class="row mb-3">
                                                            <div class="col-md-6 fw-bold">Payment Date:</div>
                                                            <div class="col-md-6">@payment.PaymentDate.ToString("MMMM dd, yyyy")</div>
                                                        </div>
                                                        <div class="row mb-3">
                                                            <div class="col-md-6 fw-bold">Homeowner:</div>
                                                            <div class="col-md-6">@(payment.Homeowner != null ? $"{payment.Homeowner.FirstName} {payment.Homeowner.LastName}" : "Unknown")</div>
                                                        </div>
                                                        <div class="row mb-3">
                                                            <div class="col-md-6 fw-bold">Bill:</div>
                                                            <div class="col-md-6">
                                                                @if (payment.Bill != null)
                                                                {
                                                                        <a asp-action="Details" asp-route-id="@payment.BillId">@payment.Bill.BillNumber</a>
                                                                }
                                                                else
                                                                {
                                                                        <span class="text-muted">N/A</span>
                                                                }
                                                            </div>
                                                        </div>
                                                        <div class="row mb-3">
                                                            <div class="col-md-6 fw-bold">Amount Paid:</div>
                                                            <div class="col-md-6 text-success fw-bold">â‚±@payment.AmountPaid.ToString("N2")</div>
                                                        </div>
                                                        <div class="row mb-3">
                                                            <div class="col-md-6 fw-bold">Payment Method:</div>
                                                            <div class="col-md-6">@payment.PaymentMethod</div>
                                                        </div>
                                                        @if (!string.IsNullOrEmpty(payment.ReferenceNumber))
                                                        {
                                                                <div class="row mb-3">
                                                                    <div class="col-md-6 fw-bold">Reference Number:</div>
                                                                    <div class="col-md-6">@payment.ReferenceNumber</div>
                                                                </div>
                                                        }
                                                        <div class="row mb-3">
                                                            <div class="col-md-6 fw-bold">Processed By:</div>
                                                            <div class="col-md-6">
                                                                @if (payment.ProcessedBy != null)
                                                                {
                                                                        <span class="text-primary">@payment.ProcessedBy.FirstName @payment.ProcessedBy.LastName</span>
                                                                }
                                                                else
                                                                {
                                                                        <span class="text-muted">Self-payment</span>
                                                                }
                                                            </div>
                                                        </div>
                                                        @if (!string.IsNullOrEmpty(payment.Notes))
                                                        {
                                                                <div class="row mb-3">
                                                                    <div class="col-md-6 fw-bold">Notes:</div>
                                                                    <div class="col-md-6">@payment.Notes</div>
                                                                </div>
                                                        }
                                                    </div>
                                                    <div class="modal-footer">
                                                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
                <div class="card-footer bg-light">
                    <div class="row">
                        <div class="col-md-6">
                            <p class="mb-0">
                                <strong>Total Payments:</strong> <span id="paymentCount">@Model.Count()</span>
                            </p>
                        </div>
                        <div class="col-md-6 text-end">
                            <p class="mb-0">
                                <strong>Total Amount:</strong> â‚±<span id="totalAmount">@Model.Sum(p => p.AmountPaid).ToString("N2")</span>
                            </p>
                        </div>
                    </div>
                </div>
            </div>
    }
</div>

@section Scripts {
        <script>
            $(document).ready(function() {
                // Get dates for date range filtering
                const today = new Date();
                const thisWeekStart = new Date(today);
                thisWeekStart.setDate(today.getDate() - today.getDay());
            
                const thisMonthStart = new Date(today.getFullYear(), today.getMonth(), 1);
                const lastMonthStart = new Date(today.getFullYear(), today.getMonth() - 1, 1);
                const lastMonthEnd = new Date(today.getFullYear(), today.getMonth(), 0);
            
                const thisYearStart = new Date(today.getFullYear(), 0, 1);
            
                // Format date for comparison
                function formatDate(date) {
                    return date.toISOString().split('T')[0];
                }
            
                // Filter functions
                function applyFilters() {
                    const methodFilter = $("#methodFilter").val().toLowerCase();
                    const dateRangeFilter = $("#dateRangeFilter").val();
                    const searchFilter = $("#searchFilter").val().toLowerCase();
                
                    let visibleCount = 0;
                    let totalAmount = 0;
                
                    $(".payment-row").each(function() {
                        const row = $(this);
                        const method = row.data("method").toLowerCase();
                        const date = row.data("date");
                        const searchText = row.data("search");
                    
                        // Method filter
                        const methodMatch = methodFilter === "" || method === methodFilter;
                    
                        // Date range filter
                        let dateMatch = true;
                        if (dateRangeFilter === "today") {
                            dateMatch = date === formatDate(today);
                        } else if (dateRangeFilter === "thisWeek") {
                            dateMatch = date >= formatDate(thisWeekStart) && date <= formatDate(today);
                        } else if (dateRangeFilter === "thisMonth") {
                            dateMatch = date >= formatDate(thisMonthStart) && date <= formatDate(today);
                        } else if (dateRangeFilter === "lastMonth") {
                            dateMatch = date >= formatDate(lastMonthStart) && date <= formatDate(lastMonthEnd);
                        } else if (dateRangeFilter === "thisYear") {
                            dateMatch = date >= formatDate(thisYearStart) && date <= formatDate(today);
                        }
                    
                        // Search filter
                        const searchMatch = searchFilter === "" || searchText.includes(searchFilter);
                    
                        if (methodMatch && dateMatch && searchMatch) {
                            row.show();
                            visibleCount++;
                        
                            // Add to total amount
                            const amountText = row.find("td:nth-child(5)").text().replace('â‚±', '').replace(',', '');
                            totalAmount += parseFloat(amountText);
                        } else {
                            row.hide();
                        }
                    });
                
                    // Update counters
                    $("#recordCount").text(visibleCount + " records");
                    $("#paymentCount").text(visibleCount);
                    $("#totalAmount").text(totalAmount.toFixed(2));
                }
            
                // Attach event handlers
                $("#methodFilter, #dateRangeFilter").on("change", applyFilters);
                $("#searchFilter").on("keyup", applyFilters);
            });
        </script>
}